# Pad a pasted file according to the timestep selected
fclose all
clear
page_screen_output(0);
page_output_immediately(1);
# Set the scene
work_dir='/home/olivaresga/data/TF5_JapanNZvoyage/2013_May/';
work_file='Grimm_201305_fix.txt';
fixed_file=[work_file(1:end-8) '_full.txt'];
id_in=fopen([work_dir work_file],'rt');
id_ou=fopen([work_dir fixed_file],'w');
# pad record ... no timestamp
pad_vec=NaN*ones(1,32);
fmt_data='%f\t%d\t%d\t%d\t%d\t%d\t%d\t%d';
for i=1:30
  fmt_data=[fmt_data '\t%f'];
end
fmt_data=[fmt_data '\t%f\n'];
# Timestep expected ... in vector form [Yr Mo Dy Hr Mi Se]
timestep=[0 0 0 0 1 0];
# Write headers
t_line=fgetl(id_in);
fprintf(id_ou,'%s\n',t_line);
# Read first line and set starting date
t_line=fgetl(id_in);
data_vec=sscanf(t_line,'%f')';
fprintf(id_ou,fmt_data,[data_vec(1:6) 0 data_vec(7:end)]);
curr_date_num=datenum([data_vec(2:6) 0]+timestep);
datestr(curr_date_num)
next_report=curr_date_num+1;
while ~feof(id_in)
  #read next data line
  t_line=fgetl(id_in);
  data_vec=sscanf(t_line,'%f')';
  #get DATE to which this record belongs
  next_date_num=datenum([data_vec(2:6) 0]);
  #Compare the record_date with the expected date. If the record date is into the future,
  #output a PAD line to the file and increase expected date value.
  while next_date_num>curr_date_num
    fprintf(id_ou,fmt_data,[curr_date_num datevec(curr_date_num) pad_vec]);
    curr_date_num=curr_date_num+datenum(timestep);
    'missing data'
  end
  fprintf(id_ou,fmt_data,[curr_date_num datevec(curr_date_num) data_vec(7:end)]);
  curr_date_num=curr_date_num+datenum(timestep);
  if curr_date_num>next_report
    datestr(curr_date_num)
    next_report=next_report+1;
  end
end
fclose(id_in);
fclose(id_ou);
#Now load the relevant data and save the HDF5 file
grimm_data=dlmread([work_dir fixed_file],'\t',1,0);
grimm_data(find(grimm_data(:,8)!=0),9:end)=NaN;
grimm_headers={'OctaveDate','Year','Month','Day','Hour','Second', 'Minute','Error', ...
'265', ...
'290', ...
'324', ...
'374', ...
'424', ...
'474', ...
'539', ...
'614', ...
'675', ...
'748', ...
'894', ...
'1140', ...
'1442', ...
'1789', ...
'2236', ...
'2739', ...
'3240', ...
'3742', ...
'4472', ...
'5701', ...
'6982', ...
'7984', ...
'9220', ...
'11180', ...
'13693', ...
'16202', ...
'18708', ...
'22361', ...
'27386', ...
'30984', ...
'35000'};
grimm_dp=[265 290 324 374 424 474 539 614 675 748 894 1140  1442  1789  2236  2739  3240  3742  4472  5701  6982  7984  9220  11180 13693 16202 18708 22361 27386 30984 35000];
grimm_dlogDp=[0.0492180227  0.0299632234  0.0669467896  0.057991947 0.0511525224  0.0457574906  0.0644579892  0.0494853631  0.0321846834  0.057991947 0.096910013 0.1139433523  0.0901766303  0.096910013 0.096910013 0.079181246 0.0669467896  0.057991947 0.096910013 0.1139433523  0.0621479067  0.0543576623  0.0705810743  0.096910013 0.079181246 0.0669467896  0.057991947 0.096910013 0.079181246 0.0280287236  1];
save('-hdf5',[work_dir 'grimm_data.h5'],'grimm_headers','grimm_dp','grimm_dlogDp','grimm_data');
figure(1);
plot((grimm_data(1:end-1,1)-grimm_data(2:end,1))*24*60);
figure(2);
pcolor(grimm_data(:,1),grimm_dp,log10(grimm_data(:,9:end)'));
shading('interp');
set(gca,'yscale','log');
ylim([250 1000]);
datetick(6);
colorbar;